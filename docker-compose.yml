services:
  traefik:
    image: traefik:v2.10
    command:
      - "--api.insecure=true"  # Enable dashboard (disable in production)
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
    ports:
      - "80:80"      # HTTP
      - "443:443"    # HTTPS
      - "8081:8080"  # Traefik dashboard
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - weather-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik-dashboard.rule=Host(`traefik.localhost`)"
      - "traefik.http.routers.traefik-dashboard.service=api@internal"
      - "traefik.http.routers.traefik-dashboard.entrypoints=web"

  weather-service:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - OPENWEATHERMAP_API_KEY=${OPENWEATHERMAP_API_KEY}
      - WEATHERAPI_KEY=${WEATHERAPI_KEY}
      - PORT=8080
      - UPDATE_INTERVAL=5m
    networks:
      - weather-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.weather.rule=Host(`weather.localhost`)"
      - "traefik.http.routers.weather.entrypoints=web"
      - "traefik.http.services.weather.loadbalancer.server.port=8080"
      # Rate limiting middleware
      - "traefik.http.middlewares.weather-ratelimit.ratelimit.average=100"
      - "traefik.http.middlewares.weather-ratelimit.ratelimit.burst=50"
      - "traefik.http.routers.weather.middlewares=weather-ratelimit"

networks:
  weather-network:
    driver: bridge 