syntax = "proto3";

package weather;

option go_package = "weather-service/proto";

import "google/protobuf/timestamp.proto";

service WeatherService {
  // Get current weather for a location
  rpc GetWeather(LocationRequest) returns (WeatherResponse) {}
  
  // Get weather forecast for a location
  rpc GetForecast(ForecastRequest) returns (ForecastResponse) {}
  
  // Stream weather updates for a location
  rpc StreamWeather(LocationRequest) returns (stream WeatherResponse) {}
  
  // Get available locations
  rpc GetLocations(Empty) returns (LocationsResponse) {}
}

message Empty {}

message LocationRequest {
  string location = 1;  // e.g., "London,UK"
}

message ForecastRequest {
  string location = 1;
  int32 days = 2;      // number of days to forecast
  string provider = 3;  // optional specific provider
}

message WeatherResponse {
  string location = 1;
  string provider = 2;
  float temperature = 3;
  float humidity = 4;
  float wind_speed = 5;
  int32 wind_deg = 6;
  float pressure = 7;
  string description = 8;
  string icon = 9;
  google.protobuf.Timestamp timestamp = 10;
}

message ForecastResponse {
  string location = 1;
  string provider = 2;
  repeated ForecastPoint forecasts = 3;
  google.protobuf.Timestamp updated = 4;
}

message ForecastPoint {
  float temperature = 1;
  float humidity = 2;
  float wind_speed = 3;
  int32 wind_deg = 4;
  float pressure = 5;
  string description = 6;
  string icon = 7;
  google.protobuf.Timestamp timestamp = 8;
}

message LocationsResponse {
  repeated string locations = 1;
  int32 count = 2;
} 